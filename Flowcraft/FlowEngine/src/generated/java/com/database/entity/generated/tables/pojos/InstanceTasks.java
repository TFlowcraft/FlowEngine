/*
 * This file is generated by jOOQ.
 */
package com.database.entity.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InstanceTasks implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID instanceId;
    private final UUID bpmnElementId;
    private final String status;
    private final OffsetDateTime startTime;
    private final OffsetDateTime endTime;
    private final Integer currentRetriesAmount;

    public InstanceTasks(InstanceTasks value) {
        this.id = value.id;
        this.instanceId = value.instanceId;
        this.bpmnElementId = value.bpmnElementId;
        this.status = value.status;
        this.startTime = value.startTime;
        this.endTime = value.endTime;
        this.currentRetriesAmount = value.currentRetriesAmount;
    }

    public InstanceTasks(
        UUID id,
        UUID instanceId,
        UUID bpmnElementId,
        String status,
        OffsetDateTime startTime,
        OffsetDateTime endTime,
        Integer currentRetriesAmount
    ) {
        this.id = id;
        this.instanceId = instanceId;
        this.bpmnElementId = bpmnElementId;
        this.status = status;
        this.startTime = startTime;
        this.endTime = endTime;
        this.currentRetriesAmount = currentRetriesAmount;
    }

    /**
     * Getter for <code>public.instance_tasks.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.instance_tasks.instance_id</code>.
     */
    public UUID getInstanceId() {
        return this.instanceId;
    }

    /**
     * Getter for <code>public.instance_tasks.bpmn_element_id</code>.
     */
    public UUID getBpmnElementId() {
        return this.bpmnElementId;
    }

    /**
     * Getter for <code>public.instance_tasks.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.instance_tasks.start_time</code>.
     */
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Getter for <code>public.instance_tasks.end_time</code>.
     */
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Getter for <code>public.instance_tasks.current_retries_amount</code>.
     */
    public Integer getCurrentRetriesAmount() {
        return this.currentRetriesAmount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final InstanceTasks other = (InstanceTasks) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.instanceId == null) {
            if (other.instanceId != null)
                return false;
        }
        else if (!this.instanceId.equals(other.instanceId))
            return false;
        if (this.bpmnElementId == null) {
            if (other.bpmnElementId != null)
                return false;
        }
        else if (!this.bpmnElementId.equals(other.bpmnElementId))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.startTime == null) {
            if (other.startTime != null)
                return false;
        }
        else if (!this.startTime.equals(other.startTime))
            return false;
        if (this.endTime == null) {
            if (other.endTime != null)
                return false;
        }
        else if (!this.endTime.equals(other.endTime))
            return false;
        if (this.currentRetriesAmount == null) {
            if (other.currentRetriesAmount != null)
                return false;
        }
        else if (!this.currentRetriesAmount.equals(other.currentRetriesAmount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.instanceId == null) ? 0 : this.instanceId.hashCode());
        result = prime * result + ((this.bpmnElementId == null) ? 0 : this.bpmnElementId.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.startTime == null) ? 0 : this.startTime.hashCode());
        result = prime * result + ((this.endTime == null) ? 0 : this.endTime.hashCode());
        result = prime * result + ((this.currentRetriesAmount == null) ? 0 : this.currentRetriesAmount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InstanceTasks (");

        sb.append(id);
        sb.append(", ").append(instanceId);
        sb.append(", ").append(bpmnElementId);
        sb.append(", ").append(status);
        sb.append(", ").append(startTime);
        sb.append(", ").append(endTime);
        sb.append(", ").append(currentRetriesAmount);

        sb.append(")");
        return sb.toString();
    }
}
