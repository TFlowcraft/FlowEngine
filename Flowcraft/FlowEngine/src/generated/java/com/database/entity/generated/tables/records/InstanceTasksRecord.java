/*
 * This file is generated by jOOQ.
 */
package com.database.entity.generated.tables.records;


import com.database.entity.generated.tables.InstanceTasks;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InstanceTasksRecord extends UpdatableRecordImpl<InstanceTasksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.instance_tasks.id</code>.
     */
    public InstanceTasksRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.instance_tasks.instance_id</code>.
     */
    public InstanceTasksRecord setInstanceId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.instance_id</code>.
     */
    public UUID getInstanceId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.instance_tasks.bpmn_element_id</code>.
     */
    public InstanceTasksRecord setBpmnElementId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.bpmn_element_id</code>.
     */
    public UUID getBpmnElementId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.instance_tasks.status</code>.
     */
    public InstanceTasksRecord setStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.instance_tasks.start_time</code>.
     */
    public InstanceTasksRecord setStartTime(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.start_time</code>.
     */
    public OffsetDateTime getStartTime() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.instance_tasks.end_time</code>.
     */
    public InstanceTasksRecord setEndTime(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.end_time</code>.
     */
    public OffsetDateTime getEndTime() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.instance_tasks.current_retries_amount</code>.
     */
    public InstanceTasksRecord setCurrentRetriesAmount(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.instance_tasks.current_retries_amount</code>.
     */
    public Integer getCurrentRetriesAmount() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InstanceTasksRecord
     */
    public InstanceTasksRecord() {
        super(InstanceTasks.INSTANCE_TASKS);
    }

    /**
     * Create a detached, initialised InstanceTasksRecord
     */
    public InstanceTasksRecord(UUID id, UUID instanceId, UUID bpmnElementId, String status, OffsetDateTime startTime, OffsetDateTime endTime, Integer currentRetriesAmount) {
        super(InstanceTasks.INSTANCE_TASKS);

        setId(id);
        setInstanceId(instanceId);
        setBpmnElementId(bpmnElementId);
        setStatus(status);
        setStartTime(startTime);
        setEndTime(endTime);
        setCurrentRetriesAmount(currentRetriesAmount);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised InstanceTasksRecord
     */
    public InstanceTasksRecord(com.database.entity.generated.tables.pojos.InstanceTasks value) {
        super(InstanceTasks.INSTANCE_TASKS);

        if (value != null) {
            setId(value.getId());
            setInstanceId(value.getInstanceId());
            setBpmnElementId(value.getBpmnElementId());
            setStatus(value.getStatus());
            setStartTime(value.getStartTime());
            setEndTime(value.getEndTime());
            setCurrentRetriesAmount(value.getCurrentRetriesAmount());
            resetChangedOnNotNull();
        }
    }
}
