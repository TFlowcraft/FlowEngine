Что требуется доработать/пофиксить на текущий момент: 
- Контекст в бд не обновляется, нужно обновлять данные в бд, после их изменения 
- Откаты сейчас выполняются для текущей задачи (нужно хотя бы решить на первый раз, сразу в threadPool за раз мы просто соберем ранее выполненные задачи и сделаем у них rollback или будем делать как-то по другому)
- Конфигурация движка (думаю что, что движок создаётся один единственный раз (javalin app соответственно тоже) и в дальнейшем он позволяет добавлять новые процессы в БД
  Мы не должны сразу парсить схему и заниматься тем, что есть сейчас в build. Полученная мапа процесса должна храниться в бд у process_info и при о обработке мы получаем ее для дальнейшего взаимодействия. 
  Это позволит избавиться от поля processMap
- Нужно подумать над тем как связывать и передавать делегаты в движок 
- Нужно добавить возможность вставки stacktrace в history 
- Добавить набор тестов 
- Сущность RetryPolicy для настройки варианта переповторов
- Рассмотреть возможность замены BlockingQueue на lock-free структуру по типу ConcurrentLinkedQueue
- Добавить стандарный логер для замены e.printStacktrace
- Поправить и проверить ручки вместе с openapi документацией 
  Тем более избаиться от поиска по processName, это не уникальное поле
- Сделать рефакторинг некоторых классов
- Добавление абстракций (интерфесы?), например, Service или, который содержит фиксированный набор методов для работы ручек и не даёт широкого применения repository, ну и прочие улучшения и введения абстракций 
  (думать над тем, чтобы выделить необходимую функциональность) 
- Подумать на процессом интеграции в микросервисную архитектуру (можем принимать конкретный экземпляр реализации TaskDelegate с сервиса или выполнять вызов своего делегата, которые через REST дергает TaskDelegate сервиса (proxy?))
